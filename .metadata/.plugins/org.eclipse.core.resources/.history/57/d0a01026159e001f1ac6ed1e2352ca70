import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 * 
 * @author Wonjohn Choi
 *
 */
public class GUI implements ActionListener{
	protected JFrame frame;  //frame that manages the whole GUI.
	protected JButton[][] buttonGrid;  //array to store each button
	protected static final int SIZE = Engine.SIZE;  //size of the board
	protected Engine engine;
	protected boolean isFinished = false;
	
	/**
	 * constructor: create 19 * 19 grid that each and every section is sensible to the mouse click.
	 */
	public GUI(){
		engine = new Engine();
		
		frame = new JFrame("*Name will be added!!");
		frame.setLayout(new GridLayout(SIZE, SIZE));
		
		buttonGrid = new JButton[SIZE][SIZE];
		
		for(int row=0;row<SIZE;row++){
			for(int col=0;col<SIZE;col++){
				buttonGrid[row][col] = new JButton();
				frame.add(buttonGrid[row][col]);
				buttonGrid[row][col].addActionListener(this);
			}
		}
		
		frame.setSize(900, 900);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.setVisible(true);
	}
	
	/**
	 * ask user the size of the board
	 */
	public int promptSIZE(){
		String strlen = JOptionPane.showInputDialog(frame, "Input the integral size of the board (5~19)", "Message Board", JOptionPane.QUESTION_MESSAGE);
		int intLen = 0;
		
		try{
			intLen = Integer.parseInt(strlen);
		}catch(Error e){
			JOptionPane.showMessageDialog(frame, "Input should be in numeric format");
			promptSIZE();
		}
		//if 
	
	}

	/**
	 * when a mouse clicked a button,
	 */
	public void actionPerformed(ActionEvent e) {
		if(!isFinished){
			//get the button
			JButton clicked = (JButton) e.getSource();
			
			for(int row=0;row<SIZE;row++){
				for(int col=0;col<SIZE;col++){
					if(clicked == buttonGrid[row][col]){
						engine.fill(row, col);
						
						if(engine.counter%2==0){
							buttonGrid[row][col].setText("X");
						}else{
							buttonGrid[row][col].setText("O");
						}
						
						buttonGrid[row][col].setEnabled(false);	
					}
				}
			}
			
			isFinished = engine.isFinished();
			
			if(isFinished) {
				if(engine.counter%2==0){
					JOptionPane.showMessageDialog(frame, "'X' wins the game");
				}else{
					JOptionPane.showMessageDialog(frame, "'O' wins the game");
				}
			}else if(engine.counter==SIZE*SIZE){
				isFinished = true;
				JOptionPane.showMessageDialog(frame, "The game is a tie");
			}
			 
			if(isFinished) {
				int option = JOptionPane.showConfirmDialog(frame, "Do you want to player another game?", "Message Board", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
				
				if(option == JOptionPane.YES_OPTION){
					
				} else{
					System.exit(0);
				}
			}
		}
	}
	
	/**
	 * main method to test the application
	 * @param args
	 */
	public static void main(String args[]){
		new GUI();
	}
}
